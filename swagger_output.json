{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "hospital",
    "description": "Documentation automatically generated by the <b>swagger-autogen</b> module."
  },
  "host": "localhost:8080",
  "basePath": "/",
  "tags": [
    {
      "name": "User",
      "description": "routes"
    },
    {
      "name": "Appointment",
      "description": "routes 2"
    }
  ],
  "schemes": [
    "http",
    "https"
  ],
  "securityDefinitions": {
    "api_key": {
      "type": "apiKey",
      "name": "api_key",
      "in": "header"
    },
    "petstore_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://petstore.swagger.io/oauth/authorize",
      "flow": "implicit",
      "scopes": {
        "read_pets": "read your pets",
        "write_pets": "modify pets in your account"
      }
    }
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/appointment/get": {
      "post": {
        "tags": [
          "Appointment"
        ],
        "description": "вывод записей пользователя",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "token",
            "required": true,
            "type": "string"
          },
          {
            "name": "GetAppointments",
            "in": "body",
            "description": "all appointments",
            "required": true,
            "type": "object",
            "schema": {
              "$ref": "#/definitions/GetAppointments"
            }
          }
        ],
        "responses": {}
      }
    },
    "/appointment/post": {
      "post": {
        "tags": [
          "Appointment"
        ],
        "description": "вывод записей пользователя",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "token",
            "required": true,
            "type": "string"
          },
          {
            "name": "Appointment",
            "in": "body",
            "description": "new appointment",
            "required": true,
            "type": "object",
            "schema": {
              "$ref": "#/definitions/Appointment"
            }
          }
        ],
        "responses": {
          "420": {
            "description": "Appointment creation error, not all fields are filled"
          }
        }
      }
    },
    "/appointment/patch": {
      "patch": {
        "tags": [
          "Appointment"
        ],
        "description": "вывод записей пользователя",
        "parameters": [
          {
            "name": "AppointmentPatch",
            "in": "body",
            "description": "new appointment",
            "required": true,
            "type": "object",
            "schema": {
              "$ref": "#/definitions/AppointmentPatch"
            }
          }
        ],
        "responses": {
          "420": {
            "description": "Error changes, changed parameters were not transferred"
          },
          "425": {
            "description": "Error of change, the parameters of which record need to be changed is unknown"
          }
        }
      }
    },
    "/appointment/del": {
      "delete": {
        "tags": [
          "Appointment"
        ],
        "description": "вывод записей пользователя",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "description": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "441": {
            "description": "Delete error, it is not known which record to delete"
          }
        }
      }
    },
    "/user/get": {
      "post": {
        "tags": [
          "User"
        ],
        "description": "поиск пользователя",
        "parameters": [
          {
            "name": "AddUser",
            "in": "body",
            "description": "new user",
            "required": true,
            "type": "object",
            "schema": {
              "$ref": "#/definitions/AddUser"
            }
          }
        ],
        "responses": {
          "440": {
            "description": "The entered password is incorrect"
          },
          "450": {
            "description": "This user does not exist"
          }
        }
      }
    },
    "/user/post": {
      "post": {
        "tags": [
          "User"
        ],
        "description": "добавление нового пользователя",
        "parameters": [
          {
            "name": "AddUser",
            "in": "body",
            "description": "new user",
            "required": true,
            "type": "object",
            "schema": {
              "$ref": "#/definitions/AddUser"
            }
          }
        ],
        "responses": {
          "420": {
            "description": "Incorrect username or password"
          },
          "421": {
            "description": "User with this login already exists"
          }
        }
      }
    },
    "/user/patch": {
      "patch": {
        "tags": [
          "User"
        ],
        "description": "добавление или обновление изображения пользователя",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "token",
            "required": true,
            "type": "string"
          },
          {
            "name": "img",
            "in": "formData",
            "description": "file",
            "required": true,
            "type": "file"
          }
        ],
        "responses": {
          "411": {
            "description": "User not found or image not selected"
          }
        }
      }
    }
  },
  "definitions": {
    "Appointment": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Nastya"
        },
        "docName": {
          "type": "string",
          "example": "Vasya"
        },
        "date": {
          "type": "string",
          "example": "2021-12-02"
        },
        "complaints": {
          "type": "string",
          "example": "vse ploho"
        }
      }
    },
    "AppointmentPatch": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string",
          "example": "xbvdb32sfbfg7fgbs"
        },
        "name": {
          "type": "string",
          "example": "Nastya"
        },
        "docName": {
          "type": "string",
          "example": "Vasya"
        },
        "date": {
          "type": "string",
          "example": "2021-12-02"
        },
        "complaints": {
          "type": "string",
          "example": "vse ploho"
        }
      }
    },
    "GetAppointments": {
      "type": "object",
      "properties": {
        "rowsOnPage": {
          "type": "string",
          "example": "5"
        },
        "currentPage": {
          "type": "string",
          "example": "1"
        },
        "value": {
          "type": "string",
          "example": "docName"
        },
        "direction": {
          "type": "string",
          "example": "asc"
        },
        "before": {
          "type": "string",
          "example": "0000-00-00"
        },
        "after": {
          "type": "string",
          "example": "9999-99-99"
        }
      },
      "required": [
        "rowsOnPage",
        "currentPage"
      ]
    },
    "AddUser": {
      "type": "object",
      "properties": {
        "login": {
          "type": "string",
          "example": "Olesya"
        },
        "password": {
          "type": "string",
          "example": "1111fdfv21w32dfz"
        }
      },
      "required": [
        "login",
        "password"
      ]
    },
    "AddFile": {
      "type": "object",
      "properties": {
        "img": {
          "type": "function"
        }
      },
      "required": [
        "img"
      ]
    }
  }
}